!function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var i={};e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("fit-texture",{dependencies:["geometry","material"],schema:{type:"boolean",default:!0},init:function(){},update:function(){if(!1!==this.data){var t=this.el,e=this;if(e.dimensions)e.applyTransformation();else{var i=function(t){var i=t.detail.texture.image.videoWidth||t.detail.texture.image.width,n=t.detail.texture.image.videoHeight||t.detail.texture.image.height;0!==n&&0!==i&&(e.dimensions={w:i,h:n},e.applyTransformation())};t.addEventListener("materialvideoloadeddata",i),t.addEventListener("materialtextureloaded",i)}}},applyTransformation:function(){var t=this.el,e=t.getAttribute("geometry"),i=this.dimensions.h/this.dimensions.w;if(e.width&&e.height&&console.warn('Using `fit-texture` component on an element with both width and height. Therefore keeping width and changing height to fit the texture. If you want to manually set both width and height, set `fit-texture="false"`. '),e.width)t.setAttribute("height",e.width*i);else if(e.height)t.setAttribute("width",e.height/i);else{t.setAttribute("width","1"),t.setAttribute("height",1*i)}},remove:function(){},pause:function(){},play:function(){}})}]);